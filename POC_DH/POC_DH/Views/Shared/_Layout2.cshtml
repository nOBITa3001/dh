<!DOCTYPE html>
<html lang="en">

<head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<!-- Meta, title, CSS, favicons, etc. -->
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1">

	<title>dh Healthy league'15</title>

	<!-- Bootstrap core CSS -->
	<link href="~/css/bootstrap.min.css" rel="stylesheet">

	<link href="~/fonts/css/font-awesome.min.css" rel="stylesheet">
	<link href="~/css/animate.min.css" rel="stylesheet">

	<!-- Custom styling plus plugins -->
	<link href="~/css/custom.css" rel="stylesheet">
	<link rel="stylesheet" type="text/css" href="~/css/maps/jquery-jvectormap-2.0.1.css" />
	<link href="~/css/icheck/flat/green.css" rel="stylesheet">
	<link href="~/css/floatexamples.css" rel="stylesheet" />

	<script src="~/js/jquery.min.js"></script>

	<!--[if lt IE 9]>
		<script src="../assets/js/ie8-responsive-file-warning.js"></script>
		<![endif]-->
	<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
	<!--[if lt IE 9]>
		  <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
		  <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
		<![endif]-->
</head>

<body class="nav-md">

	<div class="container body">

		<div class="main_container">

			<div class="col-md-3 left_col">
				<div class="left_col scroll-view">

					<div class="navbar nav_title" style="border: 0;">
						<a href="javascript:void(0);" class="site_title"><i class="fa fa-paw"></i> <span>dh Healthy league</span></a>
					</div>
					<div class="clearfix"></div>

					<!-- menu prile quick info -->
					<div class="profile">
						<div class="profile_pic">
							<img src="~/images/img.jpg" alt="..." class="img-circle profile_img">
						</div>
						<div class="profile_info">
							<span>Welcome,</span>
							<h2>Siyarat K.</h2>
						</div>
					</div>
					<!-- /menu prile quick info -->

					<br />

					<!-- sidebar menu -->
					<div id="sidebar-menu" class="main_menu_side hidden-print main_menu">

						<div class="menu_section">
							<h3>Admin</h3>
							<ul class="nav side-menu">
								<li>
									<a><i class="fa fa-home"></i> Home <span class="fa fa-chevron-down"></span></a>
									<ul class="nav child_menu" style="display: none">
										<li>
											<a href="@Url.Action("Index", "DH")">Dashboard</a>
										</li>
									</ul>
								</li>
								<li>
									<a><i class="fa fa-user"></i> User <span class="fa fa-chevron-down"></span></a>
									<ul class="nav child_menu" style="display: none">
										<li>
											@*<a href="@Url.Action("UserProfile", "DH")">Profile</a>*@
											<a href="profile.html">Profile</a>
										</li>
									</ul>
								</li>
							</ul>
						</div>
					</div>
					<!-- /sidebar menu -->

					<!-- /menu footer buttons -->
					<div class="sidebar-footer hidden-small">
						<a data-toggle="tooltip" data-placement="top" title="Settings">
							<span class="glyphicon glyphicon-cog" aria-hidden="true"></span>
						</a>
						<a data-toggle="tooltip" data-placement="top" title="FullScreen">
							<span class="glyphicon glyphicon-fullscreen" aria-hidden="true"></span>
						</a>
						<a data-toggle="tooltip" data-placement="top" title="Lock">
							<span class="glyphicon glyphicon-eye-close" aria-hidden="true"></span>
						</a>
						<a data-toggle="tooltip" data-placement="top" title="Logout">
							<span class="glyphicon glyphicon-off" aria-hidden="true"></span>
						</a>
					</div>
					<!-- /menu footer buttons -->
				</div>
			</div>

			<!-- top navigation -->
			<div class="top_nav">

				<div class="nav_menu">
					<nav class="" role="navigation">
						<div class="nav toggle">
							<a id="menu_toggle"><i class="fa fa-bars"></i></a>
						</div>

						<ul class="nav navbar-nav navbar-right">
							<li class="">
								<a href="javascript:;" class="user-profile dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
									<img src="~/images/img.jpg" alt="">Lin
									<span class=" fa fa-angle-down"></span>
								</a>
								<ul class="dropdown-menu dropdown-usermenu animated fadeInDown pull-right">
									<li>
										<a href="javascript:;">  Profile</a>
									</li>
									<li>
										<a href="javascript:;">
											<span class="badge bg-red pull-right">50%</span>
											<span>Settings</span>
										</a>
									</li>
									<li>
										<a href="javascript:;">Help</a>
									</li>
									<li>
										<a href="javascript:;"><i class="fa fa-sign-out pull-right"></i> Log Out</a>
									</li>
								</ul>
							</li>

							<li role="presentation" class="dropdown">
								<a href="javascript:;" class="dropdown-toggle info-number" data-toggle="dropdown" aria-expanded="false">
									<i class="fa fa-envelope-o"></i>
									<span class="badge bg-green">4</span>
								</a>
								<ul id="menu1" class="dropdown-menu list-unstyled msg_list animated fadeInDown" role="menu">
									<li>
										<a>
											<span class="image">
												<img src="~/images/minion.png" alt="Profile Image" />
											</span>
											<span>
												<span>nOBITa</span>
												<span class="time">3 mins ago</span>
											</span>
											<span class="message">
												Film festivals used to be do-or-die moments for movie makers. They were where...
											</span>
										</a>
									</li>
									<li>
										<a>
											<span class="image">
												<img src="~/images/minion.png" alt="Profile Image" />
											</span>
											<span>
												<span>nOBITa</span>
												<span class="time">3 mins ago</span>
											</span>
											<span class="message">
												Film festivals used to be do-or-die moments for movie makers. They were where...
											</span>
										</a>
									</li>
									<li>
										<a>
											<span class="image">
												<img src="~/images/minion.png" alt="Profile Image" />
											</span>
											<span>
												<span>nOBITa</span>
												<span class="time">3 mins ago</span>
											</span>
											<span class="message">
												Film festivals used to be do-or-die moments for movie makers. They were where...
											</span>
										</a>
									</li>
									<li>
										<a>
											<span class="image">
												<img src="~/images/minion.png" alt="Profile Image" />
											</span>
											<span>
												<span>nOBITa</span>
												<span class="time">3 mins ago</span>
											</span>
											<span class="message">
												Film festivals used to be do-or-die moments for movie makers. They were where...
											</span>
										</a>
									</li>
									<li>
										<div class="text-center">
											<a>
												<strong>See All Alerts</strong>
												<i class="fa fa-angle-right"></i>
											</a>
										</div>
									</li>
								</ul>
							</li>

						</ul>
					</nav>
				</div>

			</div>
			<!-- /top navigation -->
			<!-- page content -->
			<div class="right_col" role="main">

				<br />
				<div class="">
					@RenderBody()
				</div>

				<!-- footer content -->
				<footer>
					<div class="">
						<p class="pull-right">
							dh Healthy league'15 by <a>breadcrumbs cafe</a>. |
							<span class="lead"> <i class="fa fa-paw"></i> breadcrumbs cafe</span>
						</p>
					</div>
					<div class="clearfix"></div>
				</footer>
				<!-- /footer content -->

			</div>
			<!-- /page content -->
		</div>


	</div>

	<div id="custom_notifications" class="custom-notifications dsp_none">
		<ul class="list-unstyled notifications clearfix" data-tabbed_notifications="notif-group"></ul>
		<div class="clearfix"></div>
		<div id="notif-group" class="tabbed_notifications"></div>
	</div>

	<script src="~/js/bootstrap.min.js"></script>
	<script src="~/js/nicescroll/jquery.nicescroll.min.js"></script>

	<!-- chart js -->
	<script src="~/js/chartjs/chart.min.js"></script>
	<!-- bootstrap progress js -->
	<script src="~/js/progressbar/bootstrap-progressbar.min.js"></script>
	<!-- icheck -->
	<script src="~/js/icheck/icheck.min.js"></script>
	<!-- daterangepicker -->
	<script type="text/javascript" src="~/js/moment.min2.js"></script>
	<script type="text/javascript" src="~/js/datepicker/daterangepicker.js"></script>
	<!-- sparkline -->
	<script src="~/js/sparkline/jquery.sparkline.min.js"></script>

	<script src="~/js/custom.js"></script>

	<!-- skycons -->
	<script src="~/js/skycons/skycons.js"></script>

	<!-- easypie -->
	@*<script src="js/easypie/jquery.easypiechart.min.js"></script>*@

	<!-- flot js -->
	<!--[if lte IE 8]><script type="text/javascript" src="js/excanvas.min.js"></script><![endif]-->
	<script type="text/javascript" src="~/js/flot/jquery.flot.js"></script>
	<script type="text/javascript" src="~/js/flot/jquery.flot.pie.js"></script>
	<script type="text/javascript" src="~/js/flot/jquery.flot.orderBars.js"></script>
	<script type="text/javascript" src="~/js/flot/jquery.flot.time.min.js"></script>
	<script type="text/javascript" src="~/js/flot/date.js"></script>
	<script type="text/javascript" src="~/js/flot/jquery.flot.spline.js"></script>
	<script type="text/javascript" src="~/js/flot/jquery.flot.stack.js"></script>
	<script type="text/javascript" src="~/js/flot/curvedLines.js"></script>
	<script type="text/javascript" src="~/js/flot/jquery.flot.resize.js"></script>
	
	<script>
		$(function () {
			Chart.defaults.global.responsive = true;
		});
	</script>

	<!-- flot -->
	<script type="text/javascript">
        //define chart clolors ( you maybe add more colors if you want or flot will add it automatic )
        var chartColours = ['#96CA59', '#3F97EB', '#72c380', '#6f7a8a', '#f7cb38', '#5a8022', '#2c7282'];

        //generate random number for charts
        randNum = function () {
            return (Math.floor(Math.random() * (1 + 40 - 20))) + 20;
        }

        $(function () {
            var d1 = [];
            //var d2 = [];

            //here we generate data for chart
            for (var i = 0; i < 30; i++) {
                d1.push([new Date(Date.today().add(i).days()).getTime(), randNum() + i + i + 10]);
                //    d2.push([new Date(Date.today().add(i).days()).getTime(), randNum()]);
            }

            var chartMinDate = d1[0][0]; //first day
            var chartMaxDate = d1[20][0]; //last day

            var tickSize = [1, "day"];
            var tformat = "%d/%m/%y";

            //graph options
            var options = {
                grid: {
                    show: true,
                    aboveData: true,
                    color: "#3f3f3f",
                    labelMargin: 10,
                    axisMargin: 0,
                    borderWidth: 0,
                    borderColor: null,
                    minBorderMargin: 5,
                    clickable: true,
                    hoverable: true,
                    autoHighlight: true,
                    mouseActiveRadius: 100
                },
                series: {
                    lines: {
                        show: true,
                        fill: true,
                        lineWidth: 2,
                        steps: false
                    },
                    points: {
                        show: true,
                        radius: 4.5,
                        symbol: "circle",
                        lineWidth: 3.0
                    }
                },
                legend: {
                    position: "ne",
                    margin: [0, -25],
                    noColumns: 0,
                    labelBoxBorderColor: null,
                    labelFormatter: function (label, series) {
                        // just add some space to labes
                        return label + '&nbsp;&nbsp;';
                    },
                    width: 40,
                    height: 1
                },
                colors: chartColours,
                shadowSize: 0,
                tooltip: true, //activate tooltip
                tooltipOpts: {
                    content: "%s: %y.0",
                    xDateFormat: "%d/%m",
                    shifts: {
                        x: -30,
                        y: -50
                    },
                    defaultTheme: false
                },
                yaxis: {
                    min: 0
                },
                xaxis: {
                    mode: "time",
                    minTickSize: tickSize,
                    timeformat: tformat,
                    min: chartMinDate,
                    max: chartMaxDate
                }
            };
            //var plot = $.plot($("#placeholder33x"), [{
            //    label: "Email Sent",
            //    data: d1,
            //    lines: {
            //        fillColor: "rgba(150, 202, 89, 0.12)"
            //    }, //#96CA59 rgba(150, 202, 89, 0.42)
            //    points: {
            //        fillColor: "#fff"
            //    }
            //}], options);
        });
	</script>
	<!-- /flot -->
	<!--  -->
	<script>
        $('document').ready(function () {
            $(".sparkline_one").sparkline([2, 4, 3, 4, 5, 4, 5, 4, 3, 4, 5, 6, 4, 5, 6, 3, 5, 4, 5, 4, 5, 4, 3, 4, 5, 6, 7, 5, 4, 3, 5, 6], {
                type: 'bar',
                height: '125',
                barWidth: 13,
                colorMap: {
                    '7': '#a1a1a1'
                },
                barSpacing: 2,
                barColor: '#26B99A'
            });

            $(".sparkline11").sparkline([2, 4, 3, 4, 5, 4, 5, 4, 3, 4, 6, 2, 4, 3, 4, 5, 4, 5, 4, 3], {
                type: 'bar',
                height: '40',
                barWidth: 8,
                colorMap: {
                    '7': '#a1a1a1'
                },
                barSpacing: 2,
                barColor: '#26B99A'
            });

            $(".sparkline22").sparkline([2, 4, 3, 4, 7, 5, 4, 3, 5, 6, 2, 4, 3, 4, 5, 4, 5, 4, 3, 4, 6], {
                type: 'line',
                height: '40',
                width: '200',
                lineColor: '#26B99A',
                fillColor: '#ffffff',
                lineWidth: 3,
                spotColor: '#34495E',
                minSpotColor: '#34495E'
            });

            var doughnutData = [
                {
                    value: 30,
                    color: "#455C73"
                },
                {
                    value: 30,
                    color: "#9B59B6"
                },
                {
                    value: 60,
                    color: "#BDC3C7"
                },
                {
                    value: 100,
                    color: "#26B99A"
                },
                {
                    value: 120,
                    color: "#3498DB"
                }
        ];
            //var myDoughnut = new Chart(document.getElementById("canvas1i").getContext("2d")).Doughnut(doughnutData);
            //var myDoughnut = new Chart(document.getElementById("canvas1i2").getContext("2d")).Doughnut(doughnutData);
            //var myDoughnut = new Chart(document.getElementById("canvas1i3").getContext("2d")).Doughnut(doughnutData);
        });
	</script>
	<!-- -->

	<!-- dashbord linegraph -->
	<script>
		var doughnutData = [
            {
            	value: 30,
            	color: "#455C73"
            },
            {
            	value: 30,
            	color: "#9B59B6"
            },
            {
            	value: 60,
            	color: "#BDC3C7"
            },
            {
            	value: 100,
            	color: "#26B99A"
            },
            {
            	value: 120,
            	color: "#3498DB"
            }
		];
		var myDoughnut = new Chart(document.getElementById("canvas1").getContext("2d")).Doughnut(doughnutData);
	</script>
	<!-- /dashbord linegraph -->

	<!-- datepicker -->
	<script type="text/javascript">
        $(document).ready(function () {

            var cb = function (start, end, label) {
                console.log(start.toISOString(), end.toISOString(), label);
                $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
                //alert("Callback has fired: [" + start.format('MMMM D, YYYY') + " to " + end.format('MMMM D, YYYY') + ", label = " + label + "]");
            }

            var optionSet1 = {
                startDate: moment().subtract(29, 'days'),
                endDate: moment(),
                minDate: '01/01/2012',
                maxDate: '12/31/2015',
                dateLimit: {
                    days: 60
                },
                showDropdowns: true,
                showWeekNumbers: true,
                timePicker: false,
                timePickerIncrement: 1,
                timePicker12Hour: true,
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                },
                opens: 'left',
                buttonClasses: ['btn btn-default'],
                applyClass: 'btn-small btn-primary',
                cancelClass: 'btn-small',
                format: 'MM/DD/YYYY',
                separator: ' to ',
                locale: {
                    applyLabel: 'Submit',
                    cancelLabel: 'Clear',
                    fromLabel: 'From',
                    toLabel: 'To',
                    customRangeLabel: 'Custom',
                    daysOfWeek: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
                    monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                    firstDay: 1
                }
            };
            $('#reportrange span').html(moment().subtract(29, 'days').format('MMMM D, YYYY') + ' - ' + moment().format('MMMM D, YYYY'));
            $('#reportrange').daterangepicker(optionSet1, cb);
            $('#reportrange').on('show.daterangepicker', function () {
                console.log("show event fired");
            });
            $('#reportrange').on('hide.daterangepicker', function () {
                console.log("hide event fired");
            });
            $('#reportrange').on('apply.daterangepicker', function (ev, picker) {
                console.log("apply event fired, start/end dates are " + picker.startDate.format('MMMM D, YYYY') + " to " + picker.endDate.format('MMMM D, YYYY'));
            });
            $('#reportrange').on('cancel.daterangepicker', function (ev, picker) {
                console.log("cancel event fired");
            });
            $('#options1').click(function () {
                $('#reportrange').data('daterangepicker').setOptions(optionSet1, cb);
            });
            $('#options2').click(function () {
                $('#reportrange').data('daterangepicker').setOptions(optionSet2, cb);
            });
            $('#destroy').click(function () {
                $('#reportrange').data('daterangepicker').remove();
            });
        });
	</script>
	<!-- /datepicker -->

	<!-- skycons -->
	<script>
	var icons = new Skycons({
		"color": "#73879C"
	}),
		list = [
			"clear-day", "clear-night", "partly-cloudy-day",
			"partly-cloudy-night", "cloudy", "rain", "sleet", "snow", "wind",
			"fog"
		],
		i;

	for (i = list.length; i--;)
		icons.set(list[i], list[i]);

	icons.play();
	</script>

	<!-- Tally -->
	<script>
		var lineChartData = {
			labels: ["Week 1", "Week 2", "Week 3", "Week 4", "Week 5", "Week 6", "Week 7", "Week 8"],
			datasets: [
                {
                	label: "My First dataset",
                	fillColor: "rgba(38, 185, 154, 0.11)", //rgba(220,220,220,0.2)
                	strokeColor: "rgba(38, 185, 154, 0.7)", //rgba(220,220,220,1)
                	pointColor: "rgba(38, 185, 154, 0.7)", //rgba(220,220,220,1)
                	pointStrokeColor: "#fff",
                	pointHighlightFill: "#fff",
                	pointHighlightStroke: "rgba(220,220,220,1)",
                	data: [30, 50, 90, 125, 150, 190, 250, 300]
                }
			]

		}
		$(document).ready(function () {
			new Chart(document.getElementById("canvas_line1").getContext("2d")).Line(lineChartData, {
				responsive: true,
				scaleShowLabels: false,
				tooltipFillColor: "rgba(51, 51, 51, 0.55)"
			});
		});
	</script>

	<!-- Line graph -->
	<script>
		var randomScalingFactor = function () {
			return Math.round(Math.random() * 100)
		};

		var randomColour = function () {
			var letters = '0123456789ABCDEF';
			var colour = '#';
			for (var i = 0; i < 6; i++) {
				colour += letters[Math.floor(Math.random() * 16)];
			}

			//var letters = '789ABCD';
			//var colour = '#';
			//for (var i = 0; i < 6; i++) {
			//	colour += letters[Math.round(Math.random() * 6)];
			//}
			return colour;
		}

		var transparentColour = "rgba(255, 255, 255, .4)";
		var whiteColour = "#fff";
		var pointHighlightStrokeColour = "rgba(220,220,220,1)"

		var lineChartData2 = {
			labels: ["Week 1", "Week 2", "Week 3", "Week 4", "Week 5", "Week 6", "Week 7", "Week 8"],
			datasets: [
                {
                	label: "Feifei",
                	fillColor: transparentColour,
                	//strokeColor: "rgba(38, 185, 154, 0.7)",
                	//pointColor: "rgba(38, 185, 154, 0.7)",
                	strokeColor: randomColour(),
                	pointColor: randomColour(),
                	pointStrokeColor: whiteColour,
                	pointHighlightFill: whiteColour,
                	pointHighlightStroke: pointHighlightStrokeColour,
                	data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]
                }
				, {
                	label: "kookui",
                	fillColor: transparentColour,
                	strokeColor: randomColour(),
                	pointColor: randomColour(),
                	pointStrokeColor: whiteColour,
                	pointHighlightFill: whiteColour,
                	pointHighlightStroke: pointHighlightStrokeColour,
                	data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]
				}
				, {
					label: "Best",
					fillColor: transparentColour,
					strokeColor: randomColour(),
					pointColor: randomColour(),
					pointStrokeColor: whiteColour,
					pointHighlightFill: whiteColour,
					pointHighlightStroke: pointHighlightStrokeColour,
					data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]
				}
				, {
					label: "Bank",
					fillColor: transparentColour,
					strokeColor: randomColour(),
					pointColor: randomColour(),
					pointStrokeColor: whiteColour,
					pointHighlightFill: whiteColour,
					pointHighlightStroke: pointHighlightStrokeColour,
					data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]
				}
				, {
					label: "Tongta",
					fillColor: transparentColour,
					strokeColor: randomColour(),
					pointColor: randomColour(),
					pointStrokeColor: whiteColour,
					pointHighlightFill: whiteColour,
					pointHighlightStroke: pointHighlightStrokeColour,
					data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]
				}
				, {
					label: "Pratt",
					fillColor: transparentColour,
					strokeColor: randomColour(),
					pointColor: randomColour(),
					pointStrokeColor: whiteColour,
					pointHighlightFill: whiteColour,
					pointHighlightStroke: pointHighlightStrokeColour,
					data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]
				}
				, {
					label: "Arun",
					fillColor: transparentColour,
					strokeColor: randomColour(),
					pointColor: randomColour(),
					pointStrokeColor: whiteColour,
					pointHighlightFill: whiteColour,
					pointHighlightStroke: pointHighlightStrokeColour,
					data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]
				}
				, {
					label: "Tik",
					fillColor: transparentColour,
					strokeColor: randomColour(),
					pointColor: randomColour(),
					pointStrokeColor: whiteColour,
					pointHighlightFill: whiteColour,
					pointHighlightStroke: pointHighlightStrokeColour,
					data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]
				}
				, {
					label: "Bow",
					fillColor: transparentColour,
					strokeColor: randomColour(),
					pointColor: randomColour(),
					pointStrokeColor: whiteColour,
					pointHighlightFill: whiteColour,
					pointHighlightStroke: pointHighlightStrokeColour,
					data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]
				}
				, {
					label: "Sine",
					fillColor: transparentColour,
					strokeColor: randomColour(),
					pointColor: randomColour(),
					pointStrokeColor: whiteColour,
					pointHighlightFill: whiteColour,
					pointHighlightStroke: pointHighlightStrokeColour,
					data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]
				}
				, {
					label: "Lin",
					fillColor: transparentColour,
					strokeColor: randomColour(),
					pointColor: randomColour(),
					pointStrokeColor: whiteColour,
					pointHighlightFill: whiteColour,
					pointHighlightStroke: pointHighlightStrokeColour,
					data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]
				}
				, {
					label: "Oat",
					fillColor: transparentColour,
					strokeColor: randomColour(),
					pointColor: randomColour(),
					pointStrokeColor: whiteColour,
					pointHighlightFill: whiteColour,
					pointHighlightStroke: pointHighlightStrokeColour,
					data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]
				}
				, {
					label: "Nae",
					fillColor: transparentColour,
					strokeColor: randomColour(),
					pointColor: randomColour(),
					pointStrokeColor: whiteColour,
					pointHighlightFill: whiteColour,
					pointHighlightStroke: pointHighlightStrokeColour,
					data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]
				}
				, {
					label: "Fern",
					fillColor: transparentColour,
					strokeColor: randomColour(),
					pointColor: randomColour(),
					pointStrokeColor: whiteColour,
					pointHighlightFill: whiteColour,
					pointHighlightStroke: pointHighlightStrokeColour,
					data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]
				}
				, {
					label: "Nitin",
					fillColor: transparentColour,
					strokeColor: randomColour(),
					pointColor: randomColour(),
					pointStrokeColor: whiteColour,
					pointHighlightFill: whiteColour,
					pointHighlightStroke: pointHighlightStrokeColour,
					data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]
				}
			]

		}

		$(document).ready(function () {
			new Chart(document.getElementById("canvas000").getContext("2d")).Line(lineChartData2, {
				responsive: true,
				tooltipFillColor: "rgba(51, 51, 51, 0.55)",
				multiTooltipTemplate: "<%= datasetLabel %> - <%= value %>"
			});
		});
	</script>

	<!-- Bar graph -->
	<script>
		var randomScalingFactor = function () {
			return Math.round(Math.random() * 100)
		};
		var randomColour = function () {
			//var letters = '0123456789ABCDEF';
			//var colour = '#';
			//for (var i = 0; i < 6; i++) {
			//	colour += letters[Math.floor(Math.random() * 16)];
			//}

			var letters = '789ABCD';
			var colour = '#';
			for (var i = 0; i < 6; i++) {
				colour += letters[Math.round(Math.random() * 6)];
			}
			return colour;
		}

		var barChartData = {
			labels: ["Activities"],
			datasets: [
                {
                	label: "Feifei",
                	//fillColor: "#26B99A", //rgba(220,220,220,0.5)
                	//strokeColor: "#26B99A", //rgba(220,220,220,0.8)
                	//highlightFill: "#36CAAB", //rgba(220,220,220,0.75)
                	//highlightStroke: "#36CAAB", //rgba(220,220,220,1)
                	fillColor: randomColour(),
                	strokeColor: randomColour(),
                	//highlightFill: randomColour(),
                	//highlightStroke: randomColour(),
                	data: [randomScalingFactor()]
                }
				, {
					label: "kookui",
					fillColor: randomColour(),
					strokeColor: randomColour(),
					data: [randomScalingFactor()]
				}
				, {
					label: "Best",
					fillColor: randomColour(),
					strokeColor: randomColour(),
					data: [randomScalingFactor()]
				}
				, {
					label: "Bank",
					fillColor: randomColour(),
					strokeColor: randomColour(),
					data: [randomScalingFactor()]
				}
				, {
					label: "Tongta",
					fillColor: randomColour(),
					strokeColor: randomColour(),
					data: [randomScalingFactor()]
				}
				, {
					label: "Pratt",
					fillColor: randomColour(),
					strokeColor: randomColour(),
					data: [randomScalingFactor()]
				}
				, {
					label: "Arun",
					fillColor: randomColour(),
					strokeColor: randomColour(),
					data: [randomScalingFactor()]
				}
				, {
					label: "Tik",
					fillColor: randomColour(),
					strokeColor: randomColour(),
					data: [randomScalingFactor()]
				}
				, {
					label: "Bow",
					fillColor: randomColour(),
					strokeColor: randomColour(),
					data: [randomScalingFactor()]
				}
				, {
					label: "Sine",
					fillColor: randomColour(),
					strokeColor: randomColour(),
					data: [randomScalingFactor()]
				}
				, {
					label: "Lin",
					fillColor: randomColour(),
					strokeColor: randomColour(),
					data: [randomScalingFactor()]
				}
				, {
					label: "Oat",
					fillColor: randomColour(),
					strokeColor: randomColour(),
					data: [randomScalingFactor()]
				}
				, {
					label: "Nae",
					fillColor: randomColour(),
					strokeColor: randomColour(),
					data: [randomScalingFactor()]
				}
				, {
					label: "Fern",
					fillColor: randomColour(),
					strokeColor: randomColour(),
					data: [randomScalingFactor()]
				}
				, {
					label: "Nitin",
					fillColor: randomColour(),
					strokeColor: randomColour(),
					data: [randomScalingFactor()]
				}
			],
		}

		$(document).ready(function () {
			new Chart($("#canvas_bar").get(0).getContext("2d")).Bar(barChartData, {
				tooltipFillColor: "rgba(51, 51, 51, 0.55)",
				responsive: true,
				barDatasetSpacing: 6,
				barValueSpacing: 5,
				multiTooltipTemplate: "<%= datasetLabel %> - <%= value %>"
			});
		});
	</script>

	// Modular doughnut
	<script>
		//(function () {
		//	var canvas = $id('modular-doughnut'),
		//		colours = {
		//			"Core": blue,
		//			"Line": orange,
		//			"Bar": teal,
		//			"Polar Area": purple,
		//			"Radar": brown,
		//			"Doughnut": green
		//		};

		//	var moduleData = [

		//		{
		//			value: 7.57,
		//			color: colours["Core"],
		//			highlight: Colour(colours["Core"], 10),
		//			label: "Core"
		//		},

		//		{
		//			value: 1.63,
		//			color: colours["Bar"],
		//			highlight: Colour(colours["Bar"], 10),
		//			label: "Bar"
		//		},

		//		{
		//			value: 1.09,
		//			color: colours["Doughnut"],
		//			highlight: Colour(colours["Doughnut"], 10),
		//			label: "Doughnut"
		//		},

		//		{
		//			value: 1.71,
		//			color: colours["Radar"],
		//			highlight: Colour(colours["Radar"], 10),
		//			label: "Radar"
		//		},

		//		{
		//			value: 1.64,
		//			color: colours["Line"],
		//			highlight: Colour(colours["Line"], 10),
		//			label: "Line"
		//		},

		//		{
		//			value: 1.37,
		//			color: colours["Polar Area"],
		//			highlight: Colour(colours["Polar Area"], 10),
		//			label: "Polar Area"
		//		}

		//	];
		//	// 
		//	var moduleDoughnut = new Chart(canvas.getContext('2d')).Doughnut(moduleData, { tooltipTemplate: "<%if (label){%><%=label%>: <%}%><%= value %>kb", animation: false });
		//	// 
		//	var legendHolder = document.createElement('div');
		//	legendHolder.innerHTML = moduleDoughnut.generateLegend();
		//	// Include a html legend template after the module doughnut itself
		//	helpers.each(legendHolder.firstChild.childNodes, function (legendNode, index) {
		//		helpers.addEvent(legendNode, 'mouseover', function () {
		//			var activeSegment = moduleDoughnut.segments[index];
		//			activeSegment.save();
		//			activeSegment.fillColor = activeSegment.highlightColor;
		//			moduleDoughnut.showTooltip([activeSegment]);
		//			activeSegment.restore();
		//		});
		//	});
		//	helpers.addEvent(legendHolder.firstChild, 'mouseout', function () {
		//		moduleDoughnut.draw();
		//	});
		//	canvas.parentNode.parentNode.appendChild(legendHolder.firstChild);

		//})();
	</script>
</body>

</html>